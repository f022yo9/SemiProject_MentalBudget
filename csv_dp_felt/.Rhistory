# Arranging by region
mental_budget_temp <- mental_budget_temp %>% arrange(region)
mental_expenditure_temp <- mental_expenditure_temp %>% arrange(region)
mental_balance_temp <- mental_balance_temp %>% arrange(region)
str(mental_budget_temp)
str(mental_expenditure_temp)
str(mental_balance_temp)
# Cut 1,000,000
mental_budget_temp2 <- mental_budget_temp
mental_budget_temp2$mental_budget <- round(mental_budget_temp2$mental_budget / 1000000, 3)
str(mental_budget_temp2)
mental_budget_temp2
mental_expenditure_temp2 <- mental_expenditure_temp
mental_expenditure_temp2$mental_cost <- round(mental_expenditure_temp2$mental_cost / 1000000, 3)
str(mental_expenditure_temp2)
mental_expenditure_temp2
mental_balance_temp2 <- mental_balance_temp
mental_balance_temp2$balance <- round(mental_balance_temp2$balance / 1000000, 3)
str(mental_balance_temp2)
mental_balance_temp2
# Calculate means and medians
mean_budget <- mean(mental_budget_temp2$per.person)
mean_expenditure <- mean(mental_expenditure_temp2$per.person)
mean_balance <- mean(mental_balance_temp2$per_person)
median_budget <- median(mental_budget_temp2$per.person)
median_expenditure <- median(mental_expenditure_temp2$per.person)
median_balance <- median(mental_balance_temp2$per_person)
# Create data frame
mean_median_2018 <- data.frame(
value = c(mean_budget, mean_expenditure, mean_balance,
median_budget, median_expenditure, median_balance),
row.names = c("mean_budget", "mean_expenditure", "mean_balance",
"median_budget", "median_expenditure", "median_balance")
)
arrange(mean_median_2018)
# Print data frame
mean_median_2018
# csv 파일로 저장
write.csv(mean_median_2021, file = "/Users/f___yo_/Documents/SemiProject/csv/2018_mean_median.csv", row.names = T)
# Visualization
# Set showtext
showtext_auto()
# 지역명의 공백 제거
mental_budget_temp2$region <- trimws(mental_budget_temp2$region)
mental_expenditure_temp2$region <- trimws(mental_expenditure_temp2$region)
# combined_data 생성
combined_data <- inner_join(mental_budget_temp2, mental_expenditure_temp2, by = "region") %>%
select(region, mental_budget, mental_cost)
combined_data
# 컬럼명 변경
colnames(combined_data)[colnames(combined_data) == "mental_budget.x"] <- "mental_budget"
colnames(combined_data)[colnames(combined_data) == "mental_cost.y"] <- "mental_cost"
# 결측치 확인
missing_rows <- is.na(combined_data$mental_budget) | is.na(combined_data$mental_cost)
combined_data[missing_rows, ]
# 잔액 표 만들기 & CSV 저장
combined_data$budget_diff <- combined_data$mental_budget - combined_data$mental_cost
combined_data <- combined_data %>% arrange(budget_diff)
combined_data %>%
select(region, mental_budget, mental_cost, budget_diff) %>%
arrange(combined_data$region) %>%
write.csv(file = "/Users/f___yo_/Documents/SemiProject/csv/mental_balance_2018.csv", row.names = FALSE)
# 막대 그래프
ggplot(data = combined_data, aes(x = region)) +
geom_bar(aes(y = mental_budget, fill = "Budget"), stat = "identity", position = "dodge") +
geom_bar(aes(y = mental_cost, fill = "Expenditure"), stat = "identity", position = "dodge") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "2018년도 지역별 정신건강 예산과 지출 비교", x = "지역", y = "금액 (백만 원)") +
scale_fill_manual(values = c("Budget" = "black", "Expenditure" = "purple"), name = "Category")
# 막대 그래프
# Plot a grouped bar chart comparing the mental health budget and expenditure for each region
ggplot(data = combined_data, aes(x = region)) +
geom_bar(aes(y = mental_budget, fill = "Budget"), stat = "identity", position = "dodge") +
geom_bar(aes(y = mental_cost, fill = "Expenditure"), stat = "identity", position = "dodge") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "2018년도 지역별 정신건강 예산과 지출 비교", x = "지역", y = "금액 (백만 원)") +
scale_fill_manual(values = c("Budget" = "black", "Expenditure" = "purple"), name = "Category") +
theme(plot.title = element_text(size = 16, face = "bold")) +
theme(axis.title = element_text(size = 12, face = "bold")) +
theme(axis.text = element_text(size = 10)) +
theme(legend.title = element_text(size = 12, face = "bold")) +
theme(legend.text = element_text(size = 10)) +
theme(panel.background = element_blank()) +
theme(legend.position = "bottom") +
scale_y_continuous(labels = scales::comma) +
labs(fill = "") +
theme(legend.key.size = unit(0.75, "cm")) +
theme(plot.margin = margin(1, 1, 1, 1, "cm"))
# 막대 그래프
ggplot(data = combined_data, aes(x = region)) +
geom_bar(aes(y = mental_budget, fill = "Budget"), stat = "identity", position = "dodge") +
geom_bar(aes(y = mental_cost, fill = "Expenditure"), stat = "identity", position = "dodge") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.y = element_text(size = 8, angle = 0, hjust = 0.5, vjust = 0.5)) +
labs(title = "2018년도 지역별 정신건강 예산과 지출 비교", x = "", y = "금액 (백만 원)") +
scale_fill_manual(values = c("Budget" = "black", "Expenditure" = "purple"), name = "Category") +
facet_wrap(~region, ncol = 5, strip.position = "left")
# 막대 그래프
ggplot(data = combined_data, aes(x = region)) +
geom_bar(aes(y = mental_budget, fill = "Budget"), stat = "identity", position = "dodge") +
geom_bar(aes(y = mental_cost, fill = "Expenditure"), stat = "identity", position = "dodge") +
theme(axis.text.x = element_text(angle = 45, hjust = 1.2, vjust = 0.5)) +
labs(title = "2018년도 지역별 정신건강 예산과 지출 비교", x = "지역", y = "금액 (백만 원)") +
scale_fill_manual(values = c("Budget" = "black", "Expenditure" = "purple"), name = "Category")
# 막대 그래프
ggplot(data = combined_data, aes(x = region)) +
geom_bar(aes(y = mental_budget, fill = "Budget"), stat = "identity", position = "dodge") +
geom_bar(aes(y = mental_cost, fill = "Expenditure"), stat = "identity", position = "dodge") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 0.5)) +
labs(title = "2018년도 지역별 정신건강 예산과 지출 비교", x = "지역", y = "금액 (백만 원)") +
scale_fill_manual(values = c("Budget" = "black", "Expenditure" = "purple"), name = "Category")
# 막대 그래프
ggplot(data = combined_data, aes(x = region)) +
geom_bar(aes(y = mental_budget, fill = "Budget"), stat = "identity", position = "dodge") +
geom_bar(aes(y = mental_cost, fill = "Expenditure"), stat = "identity", position = "dodge") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 2)) +
labs(title = "2018년도 지역별 정신건강 예산과 지출 비교", x = "지역", y = "금액 (백만 원)") +
scale_fill_manual(values = c("Budget" = "black", "Expenditure" = "purple"), name = "Category")
# 막대 그래프
ggplot(data = combined_data, aes(x = region)) +
geom_bar(aes(y = mental_budget, fill = "Budget"), stat = "identity", position = "dodge") +
geom_bar(aes(y = mental_cost, fill = "Expenditure"), stat = "identity", position = "dodge") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 0)) +
labs(title = "2018년도 지역별 정신건강 예산과 지출 비교", x = "지역", y = "금액 (백만 원)") +
scale_fill_manual(values = c("Budget" = "black", "Expenditure" = "purple"), name = "Category")
# 막대 그래프
ggplot(data = combined_data, aes(x = region)) +
geom_bar(aes(y = mental_budget, fill = "Budget"), stat = "identity", position = "dodge") +
geom_bar(aes(y = mental_cost, fill = "Expenditure"), stat = "identity", position = "dodge") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 0.1)) +
labs(title = "2018년도 지역별 정신건강 예산과 지출 비교", x = "지역", y = "금액 (백만 원)") +
scale_fill_manual(values = c("Budget" = "black", "Expenditure" = "purple"), name = "Category")
# 막대 그래프
# Plot a grouped bar chart comparing the mental health budget and expenditure for each region
ggplot(data = combined_data, aes(x = region)) +
geom_bar(aes(y = mental_budget, fill = "Budget"), stat = "identity", position = "dodge") +
geom_bar(aes(y = mental_cost, fill = "Expenditure"), stat = "identity", position = "dodge") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "2018년도 지역별 정신건강 예산과 지출 비교", x = "지역", y = "금액 (백만 원)") +
scale_fill_manual(values = c("Budget" = "black", "Expenditure" = "purple"), name = "Category") +
theme(plot.title = element_text(size = 16, face = "bold")) +
theme(axis.title = element_text(size = 12, face = "bold")) +
theme(axis.text = element_text(size = 10)) +
theme(legend.title = element_text(size = 12, face = "bold")) +
theme(legend.text = element_text(size = 10)) +
theme(panel.background = element_blank()) +
theme(legend.position = "bottom") +
scale_y_continuous(labels = scales::comma) +
labs(fill = "") +
theme(legend.key.size = unit(0.75, "cm")) +
theme(plot.margin = margin(1, 1, 1, 1, "cm"))
es
# 막대 그래프
# Plot a grouped bar chart comparing the mental health budget and expenditure for each region
ggplot(data = combined_data, aes(x = region)) +
geom_bar(aes(y = mental_budget, fill = "Budget"), stat = "identity", position = "dodge") +
geom_bar(aes(y = mental_cost, fill = "Expenditure"), stat = "identity", position = "dodge") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "2018년도 지역별 정신건강 예산과 지출 비교", x = "지역", y = "금액 (백만 원)") +
scale_fill_manual(values = c("Budget" = "black", "Expenditure" = "purple"), name = "Category") +
theme(plot.title = element_text(size = 16, face = "bold")) +
theme(axis.title = element_text(size = 12, face = "bold")) +
theme(axis.text = element_text(size = 10)) +
theme(legend.title = element_text(size = 12, face = "bold")) +
theme(legend.text = element_text(size = 10)) +
theme(panel.background = element_blank()) +
theme(legend.position = "bottom") +
scale_y_continuous(labels = scales::comma) +
labs(fill = "") +
theme(legend.key.size = unit(0.75, "cm")) +
theme(plot.margin = margin(1, 1, 1, 1, "cm")) +
scale_x_discrete(expand = c(0.3, 0))
# 막대 그래프
# Plot a grouped bar chart comparing the mental health budget and expenditure for each region
ggplot(data = combined_data, aes(x = region)) +
geom_bar(aes(y = mental_budget, fill = "Budget"), stat = "identity", position = "dodge") +
geom_bar(aes(y = mental_cost, fill = "Expenditure"), stat = "identity", position = "dodge") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "2018년도 지역별 정신건강 예산과 지출 비교", x = "지역", y = "금액 (백만 원)") +
scale_fill_manual(values = c("Budget" = "black", "Expenditure" = "purple"), name = "Category") +
theme(plot.title = element_text(size = 16, face = "bold")) +
theme(axis.title = element_text(size = 12, face = "bold")) +
theme(axis.text = element_text(size = 10)) +
theme(legend.title = element_text(size = 12, face = "bold")) +
theme(legend.text = element_text(size = 10)) +
theme(panel.background = element_blank()) +
theme(legend.position = "bottom") +
scale_y_continuous(labels = scales::comma) +
labs(fill = "") +
theme(legend.key.size = unit(0.75, "cm")) +
theme(plot.margin = margin(1, 1, 1, 1, "cm"))
# 막대 그래프
# Plot a grouped bar chart comparing the mental health budget and expenditure for each region
ggplot(data = combined_data, aes(x = region)) +
geom_bar(aes(y = mental_budget, fill = "Budget"), stat = "identity", position = "dodge") +
geom_bar(aes(y = mental_cost, fill = "Expenditure"), stat = "identity", position = "dodge") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "2018년도 지역별 정신건강 예산과 지출 비교", x = "지역", y = "금액 (백만 원)") +
scale_fill_manual(values = c("Budget" = "black", "Expenditure" = "purple"), name = "Category") +
theme(plot.title = element_text(size = 16, face = "bold")) +
theme(axis.title = element_text(size = 12, face = "bold")) +
theme(axis.text = element_text(size = 10)) +
theme(legend.title = element_text(size = 12, face = "bold")) +
theme(legend.text = element_text(size = 10)) +
theme(panel.background = element_blank()) +
theme(legend.position = "bottom") +
scale_y_continuous(labels = scales::comma) +
labs(fill = "") +
theme(legend.key.size = unit(0.75, "cm")) +
theme(plot.margin = margin(1, 1, 1, 1, "cm"))
# Save the plot as a PNG file with a size of 12x6 inches
ggsave("/Users/f___yo_/Desktop/plot.png", width = 12, height = 6, dpi = 300)
# 막대 그래프
# Plot a grouped bar chart comparing the mental health budget and expenditure for each region
ggplot(data = combined_data, aes(x = region)) +
geom_bar(aes(y = mental_budget, fill = "Budget"), stat = "identity", position = "dodge") +
geom_bar(aes(y = mental_cost, fill = "Expenditure"), stat = "identity", position = "dodge") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "2018년도 지역별 정신건강 예산과 지출 비교", x = "지역", y = "금액 (백만 원)") +
scale_fill_manual(values = c("Budget" = "black", "Expenditure" = "purple"), name = "Category") +
theme(plot.title = element_text(size = 16, face = "bold")) +
theme(axis.title = element_text(size = 12, face = "bold")) +
theme(axis.text = element_text(size = 10)) +
theme(legend.title = element_text(size = 12, face = "bold")) +
theme(legend.text = element_text(size = 10)) +
theme(panel.background = element_blank()) +
theme(legend.position = "bottom") +
scale_y_continuous(labels = scales::comma) +
labs(fill = "") +
theme(legend.key.size = unit(0.75, "cm")) +
theme(plot.margin = margin(1, 1, 1, 1, "cm"))
# 막대 그래프
# Plot a grouped bar chart comparing the mental health budget and expenditure for each region
ggplot(data = combined_data, aes(x = region)) +
geom_bar(aes(y = mental_budget, fill = "Budget"), stat = "identity", position = "dodge") +
geom_bar(aes(y = mental_cost, fill = "Expenditure"), stat = "identity", position = "dodge") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "2018년도 지역별 정신건강 예산과 지출 비교", x = "지역", y = "금액 (백만 원)") +
scale_fill_manual(values = c("Budget" = "black", "Expenditure" = "purple"), name = "Category") +
theme(plot.title = element_text(size = 16, face = "bold")) +
theme(axis.title = element_text(size = 12, face = "bold")) +
theme(axis.text = element_text(size = 10)) +
theme(legend.title = element_text(size = 12, face = "bold")) +
theme(legend.text = element_text(size = 10)) +
theme(panel.background = element_blank()) +
theme(legend.position = "bottom") +
scale_y_continuous(labels = scales::comma) +
labs(fill = "") +
theme(legend.key.size = unit(0.75, "cm")) +
theme(plot.margin = margin(1, 1, 1, 1, "cm"))
library(ggplot2)
library(scales)
library(dplyr)
library(sysfonts)
library(showtext)
library(readr)
library(readxl)
library(tidyr)
library(tidyverse)
# 한글 폰트 관련
font_path <- "~/Library/Fonts"
font_add("SeoulHangangL", file.path(font_path, "SeoulHangangL.otf"))
# About 2021_mental_balance data frame
# Read CSV
mental_budget <- read.csv('/Users/f___yo_/Documents/SemiProject/csv/2020_mental_budget_per_person.csv')
mental_expenditure <- read.csv('/Users/f___yo_/Documents/SemiProject/csv/2020_mental_expenditure_per_person.csv')
# See structure
str(mental_budget)
str(mental_expenditure)
str(mental_center)
mental_center
str(dp_felt)
str(dp_counsel)
print(class(mental_budget))
str(mental_budget)
mental_budget$people
# 쉼표 제거
cols_to_convert <- c('people', 'mental_budget', 'per.person')
mental_budget[cols_to_convert] <- lapply(mental_budget[cols_to_convert],
function(x) as.numeric(gsub(',', '', x)))
str(mental_budget)
mental_budget
cols_to_convert2 <- c('people', 'mental_cost', 'per.person')
mental_expenditure[cols_to_convert2] <- lapply(mental_expenditure[cols_to_convert2],
function(x) as.numeric(gsub(',', '', x)))
str(mental_expenditure)
# Data frame: mental_balance
mental_balance <- data.frame(region = mental_budget$region,
people = mental_budget$people,
balance = mental_budget$mental_budget - mental_expenditure$mental_cost,
per_person = mental_budget$per.person - mental_expenditure$per.person)
str(mental_balance)
mental_balance
# '서울시' 제거
mental_budget_temp <- mental_budget[mental_budget$region != "서울시", ]
mental_expenditure_temp <- mental_expenditure[mental_expenditure$region != "서울시", ]
mental_balance_temp <- mental_balance[mental_balance$region != "서울시", ]
str(mental_budget_temp)
str(mental_expenditure_temp)
str(mental_balance_temp)
# What should I do with mental_balance
# Arranging by region
mental_budget_temp <- mental_budget_temp %>% arrange(region)
mental_expenditure_temp <- mental_expenditure_temp %>% arrange(region)
mental_balance_temp <- mental_balance_temp %>% arrange(region)
str(mental_budget_temp)
str(mental_expenditure_temp)
str(mental_balance_temp)
# Cut 1,000,000
mental_budget_temp2 <- mental_budget_temp
mental_budget_temp2$mental_budget <- round(mental_budget_temp2$mental_budget / 1000000, 3)
str(mental_budget_temp2)
mental_budget_temp2
mental_expenditure_temp2 <- mental_expenditure_temp
mental_expenditure_temp2$mental_cost <- round(mental_expenditure_temp2$mental_cost / 1000000, 3)
str(mental_expenditure_temp2)
mental_expenditure_temp2
mental_balance_temp2 <- mental_balance_temp
mental_balance_temp2$balance <- round(mental_balance_temp2$balance / 1000000, 3)
str(mental_balance_temp2)
mental_balance_temp2
# Calculate means and medians
mean_budget <- mean(mental_budget_temp2$per.person)
mean_expenditure <- mean(mental_expenditure_temp2$per.person)
mean_balance <- mean(mental_balance_temp2$per_person)
median_budget <- median(mental_budget_temp2$per.person)
median_expenditure <- median(mental_expenditure_temp2$per.person)
median_balance <- median(mental_balance_temp2$per_person)
# Create data frame
mean_median_2020 <- data.frame(
value = c(mean_budget, mean_expenditure, mean_balance,
median_budget, median_expenditure, median_balance),
row.names = c("mean_budget", "mean_expenditure", "mean_balance",
"median_budget", "median_expenditure", "median_balance")
)
arrange(mean_median_2020)
# Print data frame
mean_median_2020
# csv 파일로 저장
write.csv(mean_median_2021, file = "/Users/f___yo_/Documents/SemiProject/csv/2020_mean_median.csv", row.names = T)
# Visualization
# Set showtext
showtext_auto()
# 지역명의 공백 제거
mental_budget_temp2$region <- trimws(mental_budget_temp2$region)
mental_expenditure_temp2$region <- trimws(mental_expenditure_temp2$region)
# combined_data 생성
combined_data <- inner_join(mental_budget_temp2, mental_expenditure_temp2, by = "region") %>%
select(region, mental_budget, mental_cost)
combined_data
# 컬럼명 변경
colnames(combined_data)[colnames(combined_data) == "mental_budget.x"] <- "mental_budget"
colnames(combined_data)[colnames(combined_data) == "mental_cost.y"] <- "mental_cost"
# 결측치 확인
missing_rows <- is.na(combined_data$mental_budget) | is.na(combined_data$mental_cost)
combined_data[missing_rows, ]
# 잔액 표 만들기 & CSV 저장
combined_data$budget_diff <- combined_data$mental_budget - combined_data$mental_cost
combined_data <- combined_data %>% arrange(budget_diff)
combined_data %>%
select(region, mental_budget, mental_cost, budget_diff) %>%
arrange(combined_data$region) %>%
write.csv(file = "/Users/f___yo_/Documents/SemiProject/csv/mental_balance_2020.csv", row.names = FALSE)
# 막대 그래프
ggplot(data = combined_data, aes(x = region)) +
geom_bar(aes(y = mental_budget, fill = "Budget"), stat = "identity", position = "dodge") +
geom_bar(aes(y = mental_cost, fill = "Expenditure"), stat = "identity", position = "dodge") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "2020년도 지역별 정신건강 예산과 지출 비교", x = "지역", y = "금액 (백만 원)") +
scale_fill_manual(values = c("Budget" = "black", "Expenditure" = "purple"), name = "Category") +
theme(plot.title = element_text(size = 16, face = "bold")) +
theme(axis.title = element_text(size = 12, face = "bold")) +
theme(axis.text = element_text(size = 10)) +
theme(legend.title = element_text(size = 12, face = "bold")) +
theme(legend.text = element_text(size = 10)) +
theme(panel.background = element_blank()) +
theme(legend.position = "bottom") +
scale_y_continuous(labels = scales::comma) +
labs(fill = "") +
theme(legend.key.size = unit(0.75, "cm")) +
theme(plot.margin = margin(1, 1, 1, 1, "cm"))
library(ggplot2)
library(scales)
library(dplyr)
library(sysfonts)
library(showtext)
library(readr)
library(readxl)
library(tidyr)
library(tidyverse)
# 한글 폰트 관련
font_path <- "~/Library/Fonts"
font_add("SeoulHangangL", file.path(font_path, "SeoulHangangL.otf"))
# About 2021_mental_balance data frame
# Read CSV
mental_budget <- read.csv('/Users/f___yo_/Documents/SemiProject/csv/2021_mental_budget_per_person.csv')
mental_expenditure <- read.csv('/Users/f___yo_/Documents/SemiProject/csv/2021_mental_expenditure_per_person.csv')
# See structure
str(mental_budget)
str(mental_expenditure)
str(mental_center)
mental_center
str(dp_felt)
str(dp_counsel)
print(class(mental_budget))
str(mental_budget)
mental_budget$people
# 쉼표 제거
cols_to_convert <- c('people', 'mental_budget', 'per.person')
mental_budget[cols_to_convert] <- lapply(mental_budget[cols_to_convert],
function(x) as.numeric(gsub(',', '', x)))
str(mental_budget)
mental_budget
cols_to_convert2 <- c('people', 'mental_cost', 'per.person')
mental_expenditure[cols_to_convert2] <- lapply(mental_expenditure[cols_to_convert2],
function(x) as.numeric(gsub(',', '', x)))
str(mental_expenditure)
# Data frame: mental_balance
mental_balance <- data.frame(region = mental_budget$region,
people = mental_budget$people,
balance = mental_budget$mental_budget - mental_expenditure$mental_cost,
per_person = mental_budget$per.person - mental_expenditure$per.person)
str(mental_balance)
mental_balance
# '서울시' 제거
mental_budget_temp <- mental_budget[mental_budget$region != "서울시", ]
mental_expenditure_temp <- mental_expenditure[mental_expenditure$region != "서울시", ]
mental_balance_temp <- mental_balance[mental_balance$region != "서울시", ]
str(mental_budget_temp)
str(mental_expenditure_temp)
str(mental_balance_temp)
# What should I do with mental_balance
# Arranging by region
mental_budget_temp <- mental_budget_temp %>% arrange(region)
mental_expenditure_temp <- mental_expenditure_temp %>% arrange(region)
mental_balance_temp <- mental_balance_temp %>% arrange(region)
str(mental_budget_temp)
str(mental_expenditure_temp)
str(mental_balance_temp)
# Cut 1,000,000
mental_budget_temp2 <- mental_budget_temp
mental_budget_temp2$mental_budget <- round(mental_budget_temp2$mental_budget / 1000000, 3)
str(mental_budget_temp2)
mental_budget_temp2
mental_expenditure_temp2 <- mental_expenditure_temp
mental_expenditure_temp2$mental_cost <- round(mental_expenditure_temp2$mental_cost / 1000000, 3)
str(mental_expenditure_temp2)
mental_expenditure_temp2
mental_balance_temp2 <- mental_balance_temp
mental_balance_temp2$balance <- round(mental_balance_temp2$balance / 1000000, 3)
str(mental_balance_temp2)
mental_balance_temp2
# Calculate means and medians
mean_budget <- mean(mental_budget_temp2$per.person)
mean_expenditure <- mean(mental_expenditure_temp2$per.person)
mean_balance <- mean(mental_balance_temp2$per_person)
median_budget <- median(mental_budget_temp2$per.person)
median_expenditure <- median(mental_expenditure_temp2$per.person)
median_balance <- median(mental_balance_temp2$per_person)
# Create data frame
mean_median_2021 <- data.frame(
value = c(mean_budget, mean_expenditure, mean_balance,
median_budget, median_expenditure, median_balance),
row.names = c("mean_budget", "mean_expenditure", "mean_balance",
"median_budget", "median_expenditure", "median_balance")
)
arrange(mean_median_2021)
# Print data frame
mean_median_2021
# csv 파일로 저장
write.csv(mean_median_2021, file = "/Users/f___yo_/Documents/SemiProject/csv/2021_mean_median.csv", row.names = T)
# Visualization
# Set showtext
showtext_auto()
# 지역명의 공백 제거
mental_budget_temp2$region <- trimws(mental_budget_temp2$region)
mental_expenditure_temp2$region <- trimws(mental_expenditure_temp2$region)
# combined_data 생성
combined_data <- inner_join(mental_budget_temp2, mental_expenditure_temp2, by = "region") %>%
select(region, mental_budget, mental_cost)
combined_data
# 컬럼명 변경
colnames(combined_data)[colnames(combined_data) == "mental_budget.x"] <- "mental_budget"
colnames(combined_data)[colnames(combined_data) == "mental_cost.y"] <- "mental_cost"
# 결측치 확인
missing_rows <- is.na(combined_data$mental_budget) | is.na(combined_data$mental_cost)
combined_data[missing_rows, ]
# 잔액 표 만들기 & CSV 저장
combined_data$budget_diff <- combined_data$mental_budget - combined_data$mental_cost
combined_data <- combined_data %>% arrange(budget_diff)
combined_data %>%
select(region, mental_budget, mental_cost, budget_diff) %>%
arrange(combined_data$region) %>%
write.csv(file = "/Users/f___yo_/Documents/SemiProject/csv/mental_balance_2021.csv", row.names = FALSE)
# 막대 그래프
ggplot(data = combined_data, aes(x = region)) +
geom_bar(aes(y = mental_budget, fill = "Budget"), stat = "identity", position = "dodge") +
geom_bar(aes(y = mental_cost, fill = "Expenditure"), stat = "identity", position = "dodge") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "2021년도 지역별 정신건강 예산과 지출 비교", x = "지역", y = "금액 (백만 원)") +
scale_fill_manual(values = c("Budget" = "black", "Expenditure" = "purple"), name = "Category") +
theme(plot.title = element_text(size = 16, face = "bold")) +
theme(axis.title = element_text(size = 12, face = "bold")) +
theme(axis.text = element_text(size = 10)) +
theme(legend.title = element_text(size = 12, face = "bold")) +
theme(legend.text = element_text(size = 10)) +
theme(panel.background = element_blank()) +
theme(legend.position = "bottom") +
scale_y_continuous(labels = scales::comma) +
labs(fill = "") +
theme(legend.key.size = unit(0.75, "cm")) +
theme(plot.margin = margin(1, 1, 1, 1, "cm"))
